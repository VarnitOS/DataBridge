apiVersion: v1
kind: ConfigMap
metadata:
  name: hello-mcp-tool
  namespace: default
data:
  hello_mcp.py: |
    import sys
    import json
    import asyncio
    from mcp.server import Server
    from mcp.server.stdio import stdio_server
    from mcp.types import Tool, TextContent

    # Create MCP server
    app = Server("hello-mcp")

    @app.list_tools()
    async def list_tools() -> list[Tool]:
        """List available tools."""
        return [
            Tool(
                name="hello",
                description="Return a Hello World message",
                inputSchema={
                    "type": "object",
                    "properties": {},
                },
            )
        ]

    @app.call_tool()
    async def call_tool(name: str, arguments: dict) -> list[TextContent]:
        """Handle tool calls."""
        if name == "hello":
            return [TextContent(type="text", text="Hello World")]
        else:
            raise ValueError(f"Unknown tool: {name}")

    async def main():
        """Run the MCP server."""
        async with stdio_server() as (read_stream, write_stream):
            await app.run(
                read_stream,
                write_stream,
                app.create_initialization_options()
            )

    if __name__ == "__main__":
        asyncio.run(main())

